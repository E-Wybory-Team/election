@page "/testafterclean/login"
@using E_Wybory.Client.ViewModels
@using Microsoft.AspNetCore.Components.Authorization
@rendermode InteractiveWebAssembly
@inject E_Wybory.Client.Services.IAuthService AuthService
@inject AuthenticationStateProvider StateProvider

<h2>Login</h2>

<EditForm FormName="Auth" Model="@loginModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="loginModel.Username" placeholder="Enter your username" />
    </div>
    <br>

    <div>
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="loginModel.Password" placeholder="Enter your password" type="password" />
    </div>
    <br>

    <button type="submit">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color: red;">@errorMessage</p>
}

@code {
    private LoginViewModel loginModel = new LoginViewModel();
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
        var token = await AuthService.Login(loginModel);

        if (!string.IsNullOrEmpty(token))
        {
            var stateProvider = StateProvider as ElectionAuthStateProvider;
            if (stateProvider != null)
            {
                await stateProvider.MarkUserAsAuthenticated(token);
                errorMessage = "Login successful!";
            }
            else
                errorMessage = "Login unsuccessful: JWT token obtain error";

        }
        else
        {
            errorMessage = "Invalid username or password.";
        }

    }
}

