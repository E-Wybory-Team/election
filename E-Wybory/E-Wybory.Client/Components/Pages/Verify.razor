@page "/verify"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@using E_Wybory.Client.ViewModels
@inject IPersonManagementService PersonManagementService
@inject IElectionUserManagementService ElectionUserManagementService

<div class="page-content">
    <h1>UWIEŻYTELNIENIE TOŻSAMOŚCI</h1>

    <div class="election-info">
        PRZED ODDANIEM GŁOSU ZAPOZNAJ SIĘ Z INFORMATOREM WYBORCZYM
    </div>

    <a @onclick="NavigateToAuthenticator" class="auth-option">
        <img src="/images/microsoftAuth.png" alt="Microsoft Authenticator" />
        Microsoft Authenticator
    </a>
    <a  class="auth-option hover-mode">
        <img src="/images/hardwareKey.png" alt="Klucz sprzętowy" />
        Klucz sprzętowy
    </a>
</div>

@code {
    private ElectionUserViewModel user = new();
    private bool Is2FAEnabled = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var userIdentity = authState.User;

        if (!userIdentity.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/login");
            return;
        }

        var userIdClaim = userIdentity.FindFirst("IdElectionUser")?.Value;

        if (!string.IsNullOrEmpty(userIdClaim) && int.TryParse(userIdClaim, out var userId))
        {
            user = await ElectionUserManagementService.GetElectionUserById(userId);
            Is2FAEnabled = !string.IsNullOrEmpty(user.UserSecret);
        }
    }

    private void NavigateToAuthenticator()
    {
        if (Is2FAEnabled)
        {
            NavigationManager.NavigateTo("/verify/2fa-code");
        }
        else
        {
            NavigationManager.NavigateTo("/account/enable-2fa");
        }
    }
}