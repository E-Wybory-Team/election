@page "/committeelist"
@using E_Wybory.Client.ViewModels
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@inject IElectionTypeManagementService ElectionTypeManagementService
<link href="tables.css" rel="stylesheet" />
<link href="forms.css" rel="stylesheet" />

<div class="header-container">
    <h2 class="title">Konfiguracja komitetów wyborczych</h2>
    <button class="add-button" @onclick="AddParty">Dodaj komitet</button>
</div>

<div class="filters">
    <div class="filter-group">
        <label>Rodzaj wyborów</label>
        <select @onchange="(e) => FilterTable()">
            <option value="">Wybierz rodzaj wyborów</option>
            @foreach (var electionType in electionTypes)
            {
                <option value="@electionType">@electionType</option>
            }
        </select>
        </div>
</div>

<table class="candidate-table">
    <thead>
        <tr>
            <th>Nr listy</th>
            <th>Nazwa</th>
            <th>Skrót</th>
            <th>Adres</th>
            <th>Rodzaj partii</th>
            <th>Partia koalicyjna</th>
            <th>Strona WWW</th>
            <th>Opcje konfiguracji</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var party in filteredParties)
        {
            <tr>
                <td>@party.ListNumber</td>
                <td>@party.Name</td>
                <td>@party.Acronym</td>
                <td>@party.Address</td>
                <td>@party.PartyType</td>
                <td>@party.IsCoalition</td>
                <td>@party.Website</td>
                <td>
                    <a href="/modify/@party.Id">
                        <img src="images/modify.png" alt="Modify" class="icon" title="Modyfikuj" />
                    </a>
                    <a href="/delete/@party.Id">
                        <img src="images/delete.png" alt="Delete" class="icon" title="Usuń" />
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<ElectionTypeViewModel> electionTypes = new List<ElectionTypeViewModel>();

    private List<PartyViewModel> parties = new List<PartyViewModel>();

    private List<Party> filteredParties = new();

    private void FilterTable()
    {
        // Mockowana logika filtrowania
        //filteredParties = parties;
    }

    private void AddParty()
    {
        Console.WriteLine("Dodaj komitet"); // Mockowana logika dodawania
    }

    protected override void OnInitialized()
    {
        //filteredParties = parties;
    }

    public class Party
    {
        public int Id { get; set; }
        public string ListNumber { get; set; }
        public string Name { get; set; }
        public string Acronym { get; set; }
        public string Address { get; set; }
        public string PartyType { get; set; }
        public string IsCoalition { get; set; }
        public string Website { get; set; }
    }
}
