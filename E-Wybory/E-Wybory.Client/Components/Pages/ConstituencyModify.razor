@page "/modifyconstituency/{constituencyId:int}"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager
<link href="forms.css" rel="stylesheet" />

<div class="form-container">
    <h1>MODYFIKOWANIE OKRĘGU WYBORCZEGO</h1>
    <EditForm Model="@constituencyModel" OnValidSubmit="HandleModifySubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group-smaller">
            <label for="number">NUMER OKRĘGU</label>
            <InputText @bind-Value="constituencyModel.Number" id="number" class="form-input" />
        </div>
        <div class="form-group-smaller">
            <label for="scope">ZASIĘG (POWIATY)</label>
            <InputText @bind-Value="constituencyModel.Scope" id="scope" class="form-input" />
        </div>

        <div class="form-row">
            <button type="submit" class="submit-button">ZAPISZ ZMIANY</button>
            <button type="button" class="cancel-button" @onclick="Cancel">ANULUJ</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public int constituencyId { get; set; }

    private ConstituencyModel constituencyModel = new ConstituencyModel();

    protected override void OnInitialized()
    {
        var constituency = GetConstituencyById(constituencyId);
        if (constituency != null)
        {
            constituencyModel = new ConstituencyModel
                {
                    Number = constituency.Number.ToString(),
                    Scope = constituency.Scope
                };
        }
    }

    private Constituency? GetConstituencyById(int id)
    {
        var constituencies = new List<Constituency>
        {
            new Constituency { Id = 1, Number = 27, Scope = "powiaty: brzeski, głubczycki" },
            new Constituency { Id = 2, Number = 41, Scope = "powiaty: ełcki, giżycki" }
        };
        return constituencies.FirstOrDefault(c => c.Id == id);
    }

    private void HandleModifySubmit()
    {
        Console.WriteLine($"Zapisano zmiany w okręgu o numerze: {constituencyModel.Number}");
        NavigationManager.NavigateTo("/constituencylist");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/constituencylist");
    }

    public class ConstituencyModel
    {
        [Required(ErrorMessage = "Numer okręgu jest wymagany.")]
        public string Number { get; set; }

        [Required(ErrorMessage = "Zasięg jest wymagany.")]
        public string Scope { get; set; }
    }

    public class Constituency
    {
        public int Id { get; set; }
        public int Number { get; set; }
        public string Scope { get; set; }
    }
}
