@page "/candidateInfo"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@using System.ComponentModel.DataAnnotations
@using E_Wybory.Client.ViewModels
@using E_Wybory.Client.Services;
@inject IPartyManagementService PartyManagementService
@inject ICandidateManagementService CandidateManagementService
@inject IDistrictManagementService DistrictManagementService
@inject IVoivodeshipManagementService VoivodeshipManagementService
@inject IPersonManagementService PersonManagementService
@inject IProvinceManagementService ProvinceManagementService
@inject ICountyManagementService CountyManagementService
@inject IElectionTypeManagementService ElectionTypeManagementService
@inject IElectionManagementService ElectionManagementService

<link href="tables.css" rel="stylesheet"/>

<h2 class="title">SPIS KANDYDATÓW</h2>

<div class="filters">
    <div class="filter-group">
        <label>Rodzaj wyborów</label>
        <select @bind="@SelectedElectionTypeId" @bind:after="@OnElectionTypeChanged">
            <option value="">Wybierz rodzaj wyborów</option>
            @foreach (var electionType in electionTypes)
            {
                <option value="@electionType.IdElectionType">
                    @electionType.ElectionTypeName
                </option>
            }
        </select>
    </div>
    <div class="filter-group">
        <label>Województwo</label>
        <select @bind="@SelectedVoivodeshipId" @bind:after="@OnVoivodeshipChanged">
            <option value="0">Wybierz województwo</option>
            @foreach (var voivodeship in voivodeships)
            {
                <option value="@voivodeship.idVoivodeship">
                    @voivodeship.voivodeshipName
                </option>
            }
        </select>
    </div>
    <div class="filter-group">
        <label>Powiat</label>
        <select @bind="@SelectedCountyId" @bind:after="@OnCountyChanged">
            <option value="0">Wybierz powiat</option>
            @foreach (var county in counties)
            {
                @if (county.IdVoivodeship == SelectedVoivodeshipId)
                {
                    <option value="@county.IdCounty">
                        @county.CountyName
                </option>
                }
            }
        </select>
    </div>
    <div class="filter-group">
        <label>Gmina</label>
        <select @bind="@SelectedProvinceId" @bind:after="@OnProvinceChanged">
            <option value="0">Wybierz gminę</option>
            @foreach (var province in provinces)
            {
                @if (province.IdCounty == SelectedCountyId)
                {
                    <option value="@province.IdProvince">
                        @province.ProvinceName
                    </option>
                }
            }
        </select>
    </div>
    <div class="filter-group">
        <label>Numer obwodu</label>
        <select @bind="@SelectedDistrictId" @bind:after="@OnDistrictChanged">
            <option value="0">Wybierz numer obwodu</option>
            @foreach (var district in districts)
            {
                @if (district.IdProvince == SelectedProvinceId)
                {
                    <option value="@district.IdDistrict">
                        @district.DistrictName - @district.DistrictHeadquarters
                    </option>
                }
            }
        </select>
    </div>
</div>

<table class="candidate-table">
    <thead>
        <tr>
            <th>Numer na karcie do głosowania</th>
            <th>Nazwisko i imiona</th>
            <th>Zawód</th>
            <th>Miejsce (zakład) pracy</th>
            <th>Miejscowość zamieszkania</th>
            <th>Wykształcenie</th>
            <th>Wiek</th>
            <th>Przynależność do partii politycznej</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var candidate in filteredCandidates)
        {
            var person = PersonManagementService.GetPersonById(candidate.IdPerson, people);
            var age = PersonManagementService.CountPersonAge(person.BirthDate);
            var partyName = String.Empty;

            if (candidate.IdParty != 0 && candidate.IdParty != null)
                partyName = PartyManagementService.GetPartyNameById(candidate.IdParty.GetValueOrDefault(), parties);

            <tr>
                <td>@candidate.PositionNumber</td>
                <td>@person.Surname @person.Name</td>
                <td>@candidate.JobType</td>
                <td>@candidate.Workplace</td>
                <td>@candidate.PlaceOfResidence</td>
                <td>@candidate.EducationStatus</td>
                <td>@age</td>
                <td>@partyName</td>
            </tr>
            
        }
    </tbody>
</table>

@code {
    private CandidateViewModel candidate = new CandidateViewModel();
    private int SelectedElectionTypeId { get; set; } = 0;
    private int SelectedVoivodeshipId { get; set; } = 0;
    private int SelectedCountyId { get; set; } = 0;
    private int SelectedProvinceId { get; set; } = 0;
    private int SelectedDistrictId { get; set; } = 0;

    private List<CandidateViewModel> candidates = new List<CandidateViewModel>();
    private List<CandidateViewModel> filteredCandidates = new List<CandidateViewModel>();
    private List<PartyViewModel> parties = new List<PartyViewModel>();
    private List<DistrictViewModel> districts = new List<DistrictViewModel>();
    private List<VoivodeshipViewModel> voivodeships = new List<VoivodeshipViewModel>();
    private List<PersonViewModel> people = new List<PersonViewModel>();
    private List<ProvinceViewModel> provinces = new List<ProvinceViewModel>();
    private List<ElectionTypeViewModel> electionTypes = new List<ElectionTypeViewModel>();
    private List<CountyViewModel> counties = new List<CountyViewModel>();
    private List<ElectionViewModel> elections = new List<ElectionViewModel>();

    protected override async Task OnInitializedAsync()
    {
        candidates = await CandidateManagementService.Candidates();
        districts = await DistrictManagementService.Districts();
        parties = await PartyManagementService.Parties();
        voivodeships = await VoivodeshipManagementService.Voivodeships();
        people = await PersonManagementService.People();
        provinces = await ProvinceManagementService.Provinces();
        electionTypes = await ElectionTypeManagementService.ElectionTypes();
        counties = await CountyManagementService.Counties();
        filteredCandidates = candidates;
        elections = await ElectionManagementService.Elections();
    }


    private void FilterCandidate()
    {
        filteredCandidates = candidates.Where(candidate =>
            (SelectedElectionTypeId == 0 ||
                ElectionManagementService.GetElectionTypeIdFromElection(candidate.IdElection, elections) == SelectedElectionTypeId) &&

            (SelectedVoivodeshipId == 0 || 
                CountyManagementService.GetVoivodeshipIdFromCounty(
                    ProvinceManagementService.GetCountyIdFromProvince(
                        DistrictManagementService.GetProvinceIdFromDistrict(
                            candidate.IdDistrict, districts).Value, provinces).Value, counties) == SelectedVoivodeshipId) &&

            (SelectedCountyId == 0 || 
                ProvinceManagementService.GetCountyIdFromProvince(
                    DistrictManagementService.GetProvinceIdFromDistrict(candidate.IdDistrict, districts)
                    .Value, provinces) == SelectedCountyId) &&

            (SelectedProvinceId == 0 || 
                DistrictManagementService.GetProvinceIdFromDistrict(candidate.IdDistrict, districts) == SelectedProvinceId) &&

            (SelectedDistrictId == 0 || candidate.IdDistrict == SelectedDistrictId)
        ).ToList();
    }

    private void OnElectionTypeChanged()
    {
        SelectedVoivodeshipId = 0;
        SelectedCountyId = 0;
        SelectedProvinceId = 0;
        SelectedDistrictId = 0;

        FilterCandidate();
    }

    private void OnVoivodeshipChanged()
    {
        SelectedCountyId = 0;      
        SelectedProvinceId = 0;
        SelectedDistrictId = 0;

        FilterCandidate();  
    }

    private void OnCountyChanged()
    {
        SelectedProvinceId = 0;   
        SelectedDistrictId = 0;

        FilterCandidate();  
    }

    private void OnProvinceChanged()
    {
        SelectedDistrictId = 0;   

        FilterCandidate(); 
    }

    private void OnDistrictChanged()
    {
        FilterCandidate(); 
    }







}
