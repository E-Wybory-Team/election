@page "/forgot-password"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@using System.ComponentModel.DataAnnotations
@using E_Wybory.Client.ViewModels
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<div class="forgot-password-form">
    <div class="icon">
        <img src="images/forgot-password.png" alt="Ikona odzyskiwania hasła" width="400" height="400" />
    </div>

    <EditForm FormName="ForgotPassword" Model="@forgotPasswordModel" OnValidSubmit="HandleForgotPassword">
        <DataAnnotationsValidator />

        <div class="form-row">
            <div class="input-group">
                <img src="images/envelope.png" alt="Ikona użytkownika" class="input-icon" />
                <InputText @bind-Value="forgotPasswordModel.Email" placeholder="Wprowadź swój E-MAIL" class="form-input" />
                <div style="margin-left: 10px;">
                    <ValidationMessage For="@(() => forgotPasswordModel.Email)" />
                </div>
            </div>
        </div>
        <div class="form-row">
            <button type="submit" class="submit-button">WYŚLIJ KOD DO RESETU</button>
        </div>

    </EditForm>
    <StatusMessage Message="@message" />
</div>

@code {
    private ForgetPasswordViewModel forgotPasswordModel = new ForgetPasswordViewModel();
    private string? message;

    private async Task HandleForgotPassword()
    {
        bool result = await AuthService.ForgetPassword(forgotPasswordModel);

        if (result)
        {
            message = "Kod do resetu hasła został wysłany na podany adres e-mail";
            StateHasChanged();
            await Task.Delay(3000);
            NavigationManager.NavigateTo("/reset-password");

        } else
        {
            message = "Nie udało się wysłać kodu do resetu hasła";
        }
    }

    
}
